[{"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\index.js":"1","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\App.js":"2","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\layout\\Layout.js":"3","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\layout\\Menu.js":"4","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\layout\\Routes.js":"5","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\layout\\NotFound.js":"6","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\dashboard\\Dashboard.js":"7","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\utils\\date-time.js":"8","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\utils\\api.js":"9","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\layout\\ErrorAlert.js":"10","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\utils\\format-reservation-date.js":"11","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\Reservations.js":"12","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\Seat.js":"13","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\AddTable.js":"14","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\NewReservation.js":"15","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\EditReservation.js":"16","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\Search.js":"17","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\SearchResults.js":"18","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\dashboard\\SeatButton.js":"19","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\dashboard\\FinishButton.js":"20","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\dashboard\\CancelButton.js":"21","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\PastDateError.js":"22","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\TuesdayError.js":"23","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\OccupiedError.js":"24","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\CapacityError.js":"25","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\TimeError.js":"26","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\ResForm.js":"27","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\ErrorCaught.js":"28","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\index.js":"29","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\App.js":"30","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\layout\\Layout.js":"31","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\layout\\Menu.js":"32","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\layout\\Routes.js":"33","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\layout\\NotFound.js":"34","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\dashboard\\Dashboard.js":"35","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\reservations\\EditParticipant.js":"36","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\reservations\\Reservations.js":"37","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\reservations\\NewParticipant.js":"38","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\reservations\\AddTable.js":"39","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\reservations\\Seat.js":"40","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\reservations\\Search.js":"41","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\utils\\date-time.js":"42","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\dashboard\\FinishButton.js":"43","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\dashboard\\CancelButton.js":"44","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\reservations\\ErrorCaught.js":"45","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\utils\\api.js":"46","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\dashboard\\SeatButton.js":"47","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\reservations\\ResForm.js":"48","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\layout\\ErrorAlert.js":"49","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\reservations\\PastDateError.js":"50","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\reservations\\CapacityError.js":"51","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\reservations\\TuesdayError.js":"52","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\reservations\\SearchResults.js":"53","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\reservations\\OccupiedError.js":"54","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\reservations\\TimeError.js":"55","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\utils\\format-reservation-date.js":"56"},{"size":299,"mtime":1632929090351,"results":"57","hashOfConfig":"58"},{"size":352,"mtime":1632929090348,"results":"59","hashOfConfig":"58"},{"size":579,"mtime":1632929090353,"results":"60","hashOfConfig":"58"},{"size":1879,"mtime":1632929090354,"results":"61","hashOfConfig":"58"},{"size":1878,"mtime":1637426666050,"results":"62","hashOfConfig":"58"},{"size":345,"mtime":1632929090355,"results":"63","hashOfConfig":"58"},{"size":9807,"mtime":1639824012377,"results":"64","hashOfConfig":"58"},{"size":2468,"mtime":1632929090358,"results":"65","hashOfConfig":"58"},{"size":5480,"mtime":1639775206136,"results":"66","hashOfConfig":"58"},{"size":505,"mtime":1632929090352,"results":"67","hashOfConfig":"58"},{"size":647,"mtime":1632929090358,"results":"68","hashOfConfig":"58"},{"size":3380,"mtime":1634328747899,"results":"69","hashOfConfig":"58"},{"size":5825,"mtime":1639822987223,"results":"70","hashOfConfig":"58"},{"size":3207,"mtime":1639825565342,"results":"71","hashOfConfig":"58"},{"size":6037,"mtime":1639826532773,"results":"72","hashOfConfig":"58"},{"size":4762,"mtime":1639825602327,"results":"73","hashOfConfig":"58"},{"size":2486,"mtime":1639422719827,"results":"74","hashOfConfig":"58"},{"size":1457,"mtime":1639775206133,"results":"75","hashOfConfig":"58"},{"size":648,"mtime":1639411982223,"results":"76","hashOfConfig":"58"},{"size":1031,"mtime":1639423154745,"results":"77","hashOfConfig":"58"},{"size":1033,"mtime":1639423167018,"results":"78","hashOfConfig":"58"},{"size":501,"mtime":1639423065348,"results":"79","hashOfConfig":"58"},{"size":491,"mtime":1639423021387,"results":"80","hashOfConfig":"58"},{"size":472,"mtime":1639423073156,"results":"81","hashOfConfig":"58"},{"size":443,"mtime":1639423115815,"results":"82","hashOfConfig":"58"},{"size":511,"mtime":1639423028074,"results":"83","hashOfConfig":"58"},{"size":2887,"mtime":1639775206131,"results":"84","hashOfConfig":"58"},{"size":393,"mtime":1639823323987,"results":"85","hashOfConfig":"58"},{"size":299,"mtime":1632929090351,"results":"86","hashOfConfig":"87"},{"size":352,"mtime":1632929090348,"results":"88","hashOfConfig":"87"},{"size":579,"mtime":1632929090353,"results":"89","hashOfConfig":"87"},{"size":1879,"mtime":1632929090354,"results":"90","hashOfConfig":"87"},{"size":1878,"mtime":1640291636310,"results":"91","hashOfConfig":"87"},{"size":345,"mtime":1632929090355,"results":"92","hashOfConfig":"87"},{"size":9807,"mtime":1639824012377,"results":"93","hashOfConfig":"87"},{"size":3532,"mtime":1640635765826,"results":"94","hashOfConfig":"87"},{"size":3380,"mtime":1634328747899,"results":"95","hashOfConfig":"87"},{"size":3573,"mtime":1640633882003,"results":"96","hashOfConfig":"87"},{"size":3207,"mtime":1639825565342,"results":"97","hashOfConfig":"87"},{"size":5825,"mtime":1639822987223,"results":"98","hashOfConfig":"87"},{"size":2486,"mtime":1639422719827,"results":"99","hashOfConfig":"87"},{"size":2468,"mtime":1632929090358,"results":"100","hashOfConfig":"87"},{"size":1031,"mtime":1639423154745,"results":"101","hashOfConfig":"87"},{"size":1033,"mtime":1639423167018,"results":"102","hashOfConfig":"87"},{"size":393,"mtime":1639823323987,"results":"103","hashOfConfig":"87"},{"size":6383,"mtime":1640636300014,"results":"104","hashOfConfig":"87"},{"size":648,"mtime":1639411982223,"results":"105","hashOfConfig":"87"},{"size":1868,"mtime":1640633099565,"results":"106","hashOfConfig":"87"},{"size":505,"mtime":1632929090352,"results":"107","hashOfConfig":"87"},{"size":501,"mtime":1639423065348,"results":"108","hashOfConfig":"87"},{"size":443,"mtime":1639423115815,"results":"109","hashOfConfig":"87"},{"size":491,"mtime":1639423021387,"results":"110","hashOfConfig":"87"},{"size":1457,"mtime":1639775206133,"results":"111","hashOfConfig":"87"},{"size":472,"mtime":1639423073156,"results":"112","hashOfConfig":"87"},{"size":511,"mtime":1639423028074,"results":"113","hashOfConfig":"87"},{"size":647,"mtime":1632929090358,"results":"114","hashOfConfig":"87"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},"bj93m2",{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"117"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"117"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"117"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"117"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"117"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"117"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"117"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"117"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},"1hl4ygm",{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"183"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"183"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"183"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"183"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"183"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"183"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\index.js",[],["238","239"],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\App.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\layout\\Layout.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\layout\\Menu.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\layout\\Routes.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\layout\\NotFound.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\dashboard\\Dashboard.js",["240","241","242","243","244","245","246"],"//The main functions of the Dashboard component are to display all of the reservations\r\n//and allow the user to seat, edit, or cancel reservations and to display all of the\r\n//tables and allow the user to finish the tables\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  listReservations,\r\n  updateReservationStatus,\r\n  updateTableStatus,\r\n} from \"../utils/api\";\r\nimport { listTables } from \"../utils/api\";\r\nimport SeatButton from \"./SeatButton\";\r\nimport FinishButton from \"./FinishButton\";\r\nimport CancelButton from \"./CancelButton\";\r\nimport ErrorCaught from \"../reservations/ErrorCaught\";\r\nimport ErrorAlert from \"../layout/ErrorAlert\";\r\n\r\n/**\r\n * Defines the dashboard page.\r\n * @param date\r\n *  the date for which the user wants to view reservations.\r\n * @returns {JSX.Element}\r\n */\r\nfunction Dashboard({ date }) {\r\n  //The main state variables are reservations and tables which are arrays to be displayed\r\n  const [reservations, setReservations] = useState([]);\r\n  const [reservationsError, setReservationsError] = useState(null);\r\n  const [tables, setTables] = useState([]);\r\n  const [tablesError, setTablesError] = useState(null);\r\n  const [visibility3, setVisibility3] = useState(null);\r\n  const [errMessage, setErrMessage] = useState(\"\");\r\n  //Declare an instance of the useHistory hook\r\n  const history = useHistory();\r\n\r\n  //Create the functionality for the prev, today, and next buttons to toggle dates\r\n  //Function to add a day to a date\r\n  Date.prototype.addDays = function (days) {\r\n    var date = new Date(this.valueOf());\r\n    date.setDate(date.getDate() + days);\r\n    return date;\r\n  };\r\n\r\n  //Extract the year, month, and day from the date passed in and use it to\r\n  //create a date that can be incremented and decremented\r\n  let month = Number(date.substring(5, 7)) - 1;\r\n  let day = Number(date.substring(8, 10));\r\n  let year = Number(date.substring(0, 4));\r\n\r\n  let currDate = new Date(year, month, day);\r\n\r\n  //For the prevDate and nextDate, convert the date to a text string\r\n  //Convert prevDate to a text string\r\n  let prevDate = currDate.addDays(-1);\r\n  let prevDateDay = prevDate.getDate();\r\n  if (prevDateDay < 10) prevDateDay = \"0\" + prevDateDay;\r\n  let prevDateMonth = prevDate.getMonth() + 1;\r\n  if (prevDateMonth < 10) prevDateMonth = \"0\" + prevDateMonth;\r\n  let prevDateString =\r\n    prevDate.getFullYear() + \"-\" + prevDateMonth + \"-\" + prevDateDay;\r\n\r\n  //Convert nextDate to a text string\r\n  let nextDate = currDate.addDays(1);\r\n  let nextDateDay = nextDate.getDate();\r\n  if (nextDateDay < 10) nextDateDay = \"0\" + nextDateDay;\r\n  let nextDateMonth = nextDate.getMonth() + 1;\r\n  if (nextDateMonth < 10) nextDateMonth = \"0\" + nextDateMonth;\r\n  let nextDateString =\r\n    nextDate.getFullYear() + \"-\" + nextDateMonth + \"-\" + nextDateDay;\r\n  console.log(\"nextDateString\", nextDateString);\r\n\r\n  //Use useEffect to load the reservations and the tables\r\n\r\n  //Load reservations\r\n  useEffect(loadDashboard, [date]);\r\n\r\n  function loadDashboard() {\r\n    const abortController = new AbortController();\r\n    setReservationsError(null);\r\n\r\n    listReservations({ date }, abortController.signal)\r\n      .then(setReservations)\r\n      .catch(setReservationsError);\r\n    return () => abortController.abort();\r\n  }\r\n\r\n  //Load tables\r\n  useEffect(loadTables, [date]);\r\n\r\n  function loadTables() {\r\n    const abortController = new AbortController();\r\n    setTablesError(null);\r\n    listTables(abortController.signal).then(setTables).catch(setTablesError);\r\n    return () => abortController.abort();\r\n  }\r\n\r\n  //Create the handleFinish function to finish a table\r\n  //This function changes the status of a reservation to 'finished' and the status of table to 'free'\r\n  async function handleFinish(reservationId, tableId) {\r\n    setVisibility3(null);\r\n\r\n    //Create a reservation object with a reservation_id and set the status to 'finished'\r\n    console.log(\"reservationId\", reservationId);\r\n    let reservation = {\r\n      data: {},\r\n    };\r\n\r\n    reservation.data.reservation_id = reservationId;\r\n    reservation.data.status = \"finished\";\r\n\r\n    //Create a table object with a table_id and set the reservation_id to null (which makes it 'free')\r\n    let table = {\r\n      data: {},\r\n    };\r\n\r\n    table.data.table_id = tableId;\r\n    table.data.reservation_id = null;\r\n\r\n    //Make an api call to update the reservation's status\r\n    async function changeReservation(reservation) {\r\n      try {\r\n        const response = await updateReservationStatus(reservation);\r\n      } catch (err) {\r\n        console.log(\"Error making updateReservationStatus API call: \", err);\r\n        setErrMessage(err);\r\n        setVisibility3(true);\r\n      }\r\n    }\r\n\r\n    if (reservationId !== null) changeReservation(reservation);\r\n\r\n    //Make an api call to update the table's status\r\n    async function changeTable(table) {\r\n      try {\r\n        const response = await updateTableStatus(table);\r\n        console.log(response);\r\n      } catch (err) {\r\n        console.log(\"Error making updateTableStatus API call: \", err);\r\n        setErrMessage(err);\r\n        setVisibility3(true);\r\n      }\r\n    }\r\n    await changeTable(table);\r\n\r\n    //Reload reservations and tables\r\n    loadTables();\r\n    loadDashboard();\r\n  }\r\n\r\n  //Create a handleCancel function to cancel a reservation\r\n  //This function sets a reservation's status to cancelled\r\n  async function handleCancel(reservationId) {\r\n    setVisibility3(null);\r\n\r\n    //Create a reservation object with a reservation_id and set the status to cancelled\r\n    let reservation = {\r\n      data: {},\r\n    };\r\n\r\n    reservation.data.reservation_id = reservationId;\r\n    reservation.data.status = \"cancelled\";\r\n\r\n    //Make an api call to update the status of the reservation\r\n    async function changeReservation(reservation) {\r\n      try {\r\n        const response = await updateReservationStatus(reservation);\r\n      } catch (err) {\r\n        console.log(\"Error making updateReservationStatus API call: \", err);\r\n        setErrMessage(err);\r\n        setVisibility3(true);\r\n      }\r\n    }\r\n    await changeReservation(reservation);\r\n    loadDashboard();\r\n  }\r\n\r\n  //Create table rows of reservations using the 'reservations' state array\r\n  const reservationLinks = reservations.map((reservation) => {\r\n    let visible = reservation.status === \"booked\" ? true : null;\r\n    let visible2 = reservation.status !== \"cancelled\" ? true : null;\r\n\r\n    return (\r\n      <tr key={reservation.reservation_id}>\r\n        <td>{reservation.reservation_id}</td>\r\n        <td>{reservation.first_name}</td>\r\n        <td>{reservation.last_name}</td>\r\n        <td>{reservation.mobile_number}</td>\r\n        <td>{reservation.reservation_date}</td>\r\n        <td>{reservation.reservation_time}</td>\r\n        <td>{reservation.people}</td>\r\n        <td data-reservation-id-status={reservation.reservation_id}>\r\n          {reservation.status}\r\n        </td>\r\n        <td>\r\n          <Link to={`/reservations/${reservation.reservation_id}/edit`}>\r\n            <button type=\"button\" class=\"btn btn-outline-primary\">\r\n              Edit\r\n            </button>\r\n          </Link>{\" \"}\r\n        </td>\r\n        <td>\r\n          <CancelButton\r\n            visibility={visible2}\r\n            handleCancel={handleCancel}\r\n            reservationId={reservation.reservation_id}\r\n          />\r\n        </td>\r\n        <SeatButton\r\n          visibility={visible}\r\n          reservationId={reservation.reservation_id}\r\n        />\r\n      </tr>\r\n    );\r\n  });\r\n\r\n  //Create table rows of tables using the 'tables' state array\r\n  const tableLinks = tables.map((table) => {\r\n    let visible = table.reservation_id ? true : null;\r\n\r\n    return (\r\n      <tr key={table.table_id}>\r\n        <td>{table.table_id}</td>\r\n        <td>{table.table_name}</td>\r\n        <td>{table.capacity}</td>\r\n        <td>{table.reservation_id}</td>\r\n        <td data-table-id-status={table.table_id}>\r\n          {table.reservation_id === null ? \"free\" : \"occupied\"}\r\n        </td>\r\n        <FinishButton\r\n          visibility={visible}\r\n          handleFinish={handleFinish}\r\n          reservationId={table.reservation_id}\r\n          tableId={table.table_id}\r\n        />\r\n      </tr>\r\n    );\r\n  });\r\n\r\n  //Return the html code for the reservations and the tables\r\n  return (\r\n    <main>\r\n      <h1>Reservations</h1>\r\n      <table>\r\n        <tr>\r\n          <th>Reservation ID</th>\r\n          <th>First Name</th>\r\n          <th>Last Name</th>\r\n          <th>Mobile Number</th>\r\n          <th>Reservation Date</th>\r\n          <th>Reservation Time</th>\r\n          <th>People</th>\r\n          <th>Status</th>\r\n        </tr>\r\n\r\n        {reservationLinks}\r\n        <tr>\r\n          <td>\r\n            <Link to={`/dashboard?date=${prevDateString}`}>\r\n              <button type=\"button\" class=\"btn btn-primary\">\r\n                Previous\r\n              </button>\r\n            </Link>{\" \"}\r\n          </td>\r\n          <td>\r\n            <Link to={`/dashboard`}>\r\n              <button type=\"button\" class=\"btn btn-primary\">\r\n                Today\r\n              </button>\r\n            </Link>{\" \"}\r\n          </td>\r\n          <td>\r\n            <Link to={`/dashboard?date=${nextDateString}`}>\r\n              <button type=\"button\" class=\"btn btn-primary\">\r\n                Next\r\n              </button>\r\n            </Link>{\" \"}\r\n          </td>\r\n        </tr>\r\n      </table>\r\n      <br />\r\n      <h1>Tables for Seating</h1>\r\n      <table>\r\n        <tr>\r\n          <th>Table ID</th>\r\n          <th>Table Name</th>\r\n          <th>Capacity</th>\r\n          <th>Reservation ID</th>\r\n          <th>Status</th>\r\n        </tr>\r\n        {tableLinks}\r\n      </table>\r\n      <ErrorCaught visibility3={visibility3} msg={errMessage} />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\utils\\date-time.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\utils\\api.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\layout\\ErrorAlert.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\utils\\format-reservation-date.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\Reservations.js",["247","248"],"import React, { useEffect, useState } from \"react\";\r\nimport { listReservations } from \"../utils/api\";\r\nimport ErrorAlert from \"../layout/ErrorAlert\";\r\n\r\n/**\r\n * Defines the dashboard page.\r\n * @param date\r\n *  the date for which the user wants to view reservations.\r\n * @returns {JSX.Element}\r\n */\r\nfunction Reservations({ date }) {\r\n  const [reservations, setReservations] = useState([]);\r\n  const [reservationsError, setReservationsError] = useState(null);\r\n\r\n  useEffect(loadDashboard, [date]);\r\n\r\n  function loadDashboard() {\r\n    const abortController = new AbortController();\r\n    setReservationsError(null);\r\n    listReservations({ date }, abortController.signal)\r\n      .then(setReservations)\r\n      .catch(setReservationsError);\r\n    return () => abortController.abort();\r\n  }\r\n\r\n  const reservationLinks = reservations.map((reservation) => (\r\n    <li key={reservation.reservation_id}>\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">{reservation.reservation_id}</h5>\r\n          <p className=\"card-text\">\r\n            <table>\r\n              <tr>\r\n                <td>{reservation.first_name}</td>\r\n                <td>{reservation.last_name}</td>\r\n              </tr>\r\n            </table>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  ));\r\n\r\n  return (\r\n    <main>\r\n      <h1>Reservations</h1>\r\n      <form>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"first_name\">First Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"first_name\"\r\n            className=\"form-control\"\r\n            id=\"first_name\"\r\n            aria-describedby=\"emailHelp\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"last_name\">Last Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"last_name\"\r\n            className=\"form-control\"\r\n            id=\"last_name\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"mobile_number\">Mobile Number</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"mobile_number\"\r\n            className=\"form-control\"\r\n            id=\"mobile_number\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"reservation_date\">Date of Reservation</label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"reservation_date\"\r\n            className=\"form-control\"\r\n            id=\"reservation_date\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"reservation_time\">Time of Reservation</label>\r\n          <input\r\n            type=\"time\"\r\n            name=\"reservation_time\"\r\n            className=\"form-control\"\r\n            id=\"reservation_time\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"people\">People</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"people\"\r\n            className=\"form-control\"\r\n            id=\"people\"\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Submit\r\n        </button>\r\n        <button type=\"cancel\" className=\"btn btn-primary\">\r\n          Cancel\r\n        </button>\r\n      </form>\r\n      <ul>{reservationLinks}</ul>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Reservations;\r\n","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\Seat.js",["249","250","251","252"],"//The Seat Component is used to assign a reservation to a given table\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  listTables,\r\n  updateTable,\r\n  readReservation,\r\n  readTable,\r\n} from \"../utils/api\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport ErrorAlert from \"../layout/ErrorAlert\";\r\nimport CapacityError from \"./CapacityError\";\r\nimport OccupiedError from \"./OccupiedError\";\r\nimport ErrorCaught from \"./ErrorCaught\";\r\n\r\n/**\r\n * Defines the dashboard page.\r\n * @param date\r\n *  the date for which the user wants to view reservations.\r\n * @returns {JSX.Element}\r\n */\r\nfunction Seat({ date }) {\r\n  //Create state variables\r\n  const [tables, setTables] = useState([]);\r\n  const [tablesError, setTablesError] = useState(null);\r\n  const [tableId, setTableId] = useState(\"\");\r\n  const [visibility, setVisibility] = useState(null);\r\n  const [visibility2, setVisibility2] = useState(null);\r\n  const [visibility3, setVisibility3] = useState(null);\r\n  const [errMessage, setErrMessage] = useState(\"\");\r\n  const [capacity, setCapacity] = useState(null);\r\n  const [people, setPeople] = useState(null);\r\n  const [occupied, setOccupied] = useState(null);\r\n\r\n  //history hook\r\n  const history = useHistory();\r\n\r\n  //The handleTableIdChange function is called whenever the value for the table drop-down is changed\r\n  //This function sets the table_id, capacity, and occupied status of the table\r\n  function handleTableIdChange(event) {\r\n    setTableId(event.target.value);\r\n    setVisibility3(null);\r\n\r\n    async function getTable(table_id) {\r\n      try {\r\n        const response = await readTable(table_id);\r\n        setCapacity(response.capacity);\r\n        setOccupied(response.reservation_id);\r\n      } catch (err) {\r\n        console.log(\"Error making readTable API call:\", err);\r\n        setErrMessage(err);\r\n        setVisibility3(true);\r\n      }\r\n    }\r\n\r\n    getTable(event.target.value);\r\n  }\r\n\r\n  //Get ReservationId from url\r\n  const { reservationId } = useParams();\r\n\r\n  //Use useEffect to load the tables\r\n  useEffect(loadTables, [date]);\r\n\r\n  function loadTables() {\r\n    const abortController = new AbortController();\r\n    setTablesError(null);\r\n\r\n    //Reset ErrorCaught visibility\r\n    setVisibility3(null);\r\n\r\n    listTables(abortController.signal).then(setTables).catch(setTablesError);\r\n    loadPeople();\r\n    return () => abortController.abort();\r\n  }\r\n\r\n  function loadPeople() {\r\n    //Make call to get the reservation and check the number of people in the reservation\r\n    async function getReservation(reservationId) {\r\n      try {\r\n        const response = await readReservation(reservationId);\r\n        setPeople(response.people);\r\n      } catch (err) {\r\n        console.log(\"Error Making readReservation API Call\", err);\r\n        setErrMessage(err);\r\n        setVisibility3(true);\r\n      }\r\n    }\r\n    getReservation(reservationId);\r\n  }\r\n\r\n  //Create table rows from the tables state array and use to populate the drop-down\r\n  const tableLinks = tables.map((table) => (\r\n    <option value={table.table_id}>\r\n      {table.table_name} - {table.capacity}\r\n    </option>\r\n  ));\r\n\r\n  //Create the handleSubmit function to seat a party at a table\r\n  //This function changes the status of a reservation to \"seated\" and it\r\n  //changes the reservation_id on the table to match the party's reservation_id\r\n  //so that the table is \"occupied\"\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n    validate();\r\n\r\n    //Create a table object with a table_id and reservation_id\r\n    let table = {\r\n      data: {},\r\n    };\r\n\r\n    table.data.table_id = tableId;\r\n    table.data.reservation_id = reservationId;\r\n\r\n    //Update the table with the reservation_id\r\n    async function changeTable(table) {\r\n      try {\r\n        const response = await updateTable(table);\r\n        history.push(\"/dashboard\");\r\n      } catch (err) {\r\n        console.log(\"The API Call for updateTable had an error:\", err);\r\n        setErrMessage(err);\r\n        setVisibility3(true);\r\n      }\r\n    }\r\n    await changeTable(table);\r\n  }\r\n\r\n  //The validate function is used by the handleSubmit function to make sure\r\n  //that the table has sufficient capacity and that it is not occupied.\r\n  const validate = () => {\r\n    //Reset visibility\r\n    setVisibility(null);\r\n    setVisibility2(null);\r\n    setVisibility3(null);\r\n\r\n    //Display an error message if table capacity is less than the size of the party\r\n    if (capacity < people) {\r\n      setVisibility(true);\r\n    }\r\n\r\n    if (occupied !== null) {\r\n      setVisibility2(true);\r\n    }\r\n  };\r\n\r\n  //Create the handleCancel function to return the user to the reservations page\r\n  const handleCancel = (event) => {\r\n    window.history.back();\r\n  };\r\n\r\n  //Return the drop-down and the submit button to allow a user to seat a party at a table\r\n  return (\r\n    <main>\r\n      <h1>Seat the Party</h1>\r\n      <br />\r\n      <div class=\"form-group\">\r\n        <label for=\"exampleFormControlSelect1\">Choose Table</label>\r\n        <select\r\n          class=\"form-control\"\r\n          id=\"table_id\"\r\n          name=\"table_id\"\r\n          onChange={handleTableIdChange}\r\n          value={tableId}\r\n        >\r\n          <option value=\"\">--Select an Option--</option>\r\n          {tableLinks}\r\n        </select>\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Submit\r\n        </button>\r\n        <button\r\n          type=\"cancel\"\r\n          className=\"btn btn-primary\"\r\n          onClick={handleCancel}\r\n        >\r\n          Cancel\r\n        </button>\r\n      </form>\r\n      <CapacityError visibility={visibility} />\r\n      <OccupiedError visibility2={visibility2} />\r\n      <ErrorCaught visibility3={visibility3} msg={errMessage} />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Seat;\r\n","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\AddTable.js",["253"],"import React, { useState } from \"react\";\r\nimport { createTable } from \"../utils/api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ErrorCaught from \"./ErrorCaught\";\r\nimport ErrorAlert from \"../layout/ErrorAlert\";\r\n\r\n/**\r\n * Defines the dashboard page.\r\n * @param date\r\n *  the date for which the user wants to view reservations.\r\n * @returns {JSX.Element}\r\n */\r\nfunction AddTable({ date }) {\r\n  //Create tableName and capacity state variables and add event listeners\r\n  const [tableName, setTableName] = useState(\"\");\r\n  const handleTableNameChange = (event) => setTableName(event.target.value);\r\n\r\n  const [capacity, setCapacity] = useState(\"\");\r\n  const handleCapacityChange = (event) => setCapacity(event.target.value);\r\n\r\n  //State vars for ErrorCaught\r\n  const [visibility3, setVisibility3] = useState(null);\r\n  const [errMessage, setErrMessage] = useState(\"\");\r\n\r\n  //Create instance of useHistory hook\r\n  const history = useHistory();\r\n\r\n  //The handleSubmit function creates a new table and posts it to the db\r\n  const handleSubmit = (event) => {\r\n    console.log(\"helloThereGuy\");\r\n    event.preventDefault();\r\n\r\n    setVisibility3(null);\r\n\r\n    //Create a table object and set its name and capacity according to the\r\n    //input fields\r\n    let table = {\r\n      data: {},\r\n    };\r\n\r\n    table.data.table_name = tableName;\r\n    table.data.capacity = Number(capacity);\r\n\r\n    //Make an api call to post the new table to the db\r\n    async function newTable(table) {\r\n      try {\r\n        const response = await createTable(table);\r\n        if (response) history.push(\"/dashboard\");\r\n      } catch (err) {\r\n        console.log(\"Error making createTable API call: \", err);\r\n        setErrMessage(err);\r\n        setVisibility3(true);\r\n      }\r\n    }\r\n\r\n    newTable(table);\r\n  };\r\n\r\n  //Create the handleCancel function to cancel and return to the homepage\r\n  const handleCancel = (event) => {\r\n    event.preventDefault();\r\n    window.history.back();\r\n  };\r\n\r\n  //Return the html with inputs for entering the tableName and capacity\r\n  return (\r\n    <main>\r\n      <h1>Add a Table</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"table_name\">Table Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"table_name\"\r\n            className=\"form-control\"\r\n            id=\"table_name\"\r\n            onChange={handleTableNameChange}\r\n            value={tableName}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"capacity\">Capacity</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"capacity\"\r\n            className=\"form-control\"\r\n            id=\"capacity\"\r\n            onChange={handleCapacityChange}\r\n            value={capacity}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Submit\r\n        </button>\r\n        <button\r\n          type=\"cancel\"\r\n          className=\"btn btn-primary\"\r\n          onClick={handleCancel}\r\n        >\r\n          Cancel\r\n        </button>\r\n      </form>\r\n      <ErrorCaught visibility3={visibility3} msg={errMessage} />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default AddTable;\r\n","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\NewReservation.js",["254","255"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { createReservation } from \"../utils/api\";\r\nimport ErrorAlert from \"../layout/ErrorAlert\";\r\nimport ResForm from \"./ResForm\";\r\nimport PastDateError from \"./PastDateError\";\r\nimport TuesdayError from \"./TuesdayError\";\r\nimport TimeError from \"./TimeError\";\r\nimport ErrorCaught from \"./ErrorCaught\";\r\n\r\n/**\r\n * Defines the dashboard page.\r\n * @param date\r\n *  the date for which the user wants to view reservations.\r\n * @returns {JSX.Element}\r\n */\r\nfunction NewReservation({ date }) {\r\n  //Create state variables and add event listeners\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const handleFirstNameChange = (event) => setFirstName(event.target.value);\r\n\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const handleLastNameChange = (event) => setLastName(event.target.value);\r\n\r\n  const [mobileNumber, setMobileNumber] = useState(\"\");\r\n  const handleMobileNumberChange = (event) =>\r\n    setMobileNumber(event.target.value);\r\n\r\n  const [reservationDate, setReservationDate] = useState(\"\");\r\n  const handleReservationDateChange = (event) =>\r\n    setReservationDate(event.target.value);\r\n\r\n  const [reservationTime, setReservationTime] = useState(\"\");\r\n  const handleReservationTimeChange = (event) =>\r\n    setReservationTime(event.target.value);\r\n\r\n  const [people, setPeople] = useState(\"\");\r\n  const handlePeopleChange = (event) => setPeople(Number(event.target.value));\r\n\r\n  //Set visibility for the different types of errors that can occur\r\n  const [visibility, setVisibility] = useState(null);\r\n  const [visibility2, setVisibility2] = useState(null);\r\n  const [visibility3, setVisibility3] = useState(null);\r\n\r\n  const [visibilityError, setVisibilityError] = useState(null);\r\n  const [errMessage, setErrMessage] = useState(\"\");\r\n\r\n  //Create instance of useHistory hook\r\n  const history = useHistory();\r\n\r\n  //Create switched\r\n  let switched = null;\r\n\r\n  //Create the handleSubmit function which creates a reservation based on the input and\r\n  //makes an api call to add that reservation to the database\r\n  const handleSubmit = (event) => {\r\n    switched = null;\r\n\r\n    event.preventDefault();\r\n\r\n    //Validate the input\r\n    validate();\r\n\r\n    if (!switched) {\r\n      let reservation = {\r\n        data: {},\r\n      };\r\n\r\n      //Set state variables\r\n      reservation.data.first_name = firstName;\r\n      reservation.data.last_name = lastName;\r\n      reservation.data.mobile_number = mobileNumber;\r\n      reservation.data.reservation_date = reservationDate;\r\n      reservation.data.reservation_time = reservationTime;\r\n      reservation.data.people = people;\r\n\r\n      //Make api call to create a new reservation\r\n      async function newReservation(reservation) {\r\n        try {\r\n          const response = await createReservation(reservation);\r\n        } catch (err) {\r\n          console.log(\"Error making createReservation API call\", err);\r\n          setErrMessage(err);\r\n          setVisibilityError(true);\r\n        }\r\n      }\r\n      newReservation(reservation);\r\n\r\n      history.push(`/dashboard?date=${reservationDate}`);\r\n    }\r\n  };\r\n\r\n  //The validate function ensures that the reservation is not in the past, on a Tuesday,\r\n  //or before 10:00AM or after 9:30PM\r\n  const validate = () => {\r\n    //Reset visibility\r\n    setVisibility(null);\r\n    setVisibility2(null);\r\n    setVisibility3(null);\r\n    setVisibilityError(null);\r\n\r\n    //Create date for reservation date\r\n    let month = Number(reservationDate.substring(5, 7)) - 1;\r\n    let day = Number(reservationDate.substring(8, 10));\r\n    let year = Number(reservationDate.substring(0, 4));\r\n    let hours = Number(reservationTime.substring(0, 2));\r\n    let minutes = Number(reservationTime.substring(3));\r\n\r\n    //Compare the current date with the date of the reservation entered\r\n    let resDate = new Date(year, month, day);\r\n    resDate.setHours(hours);\r\n    resDate.setMinutes(minutes);\r\n\r\n    let today = new Date();\r\n\r\n    //If the current date is greater than the reservation date, throw an error\r\n    if (resDate.valueOf() < today.valueOf()) {\r\n      setVisibility(true);\r\n      switched = true;\r\n    }\r\n\r\n    //If the reservation is made on a Tuesday, throw an error\r\n    if (resDate.getDay() === 2) {\r\n      setVisibility2(true);\r\n      switched = true;\r\n    }\r\n\r\n    //If the reservation is earlier than 10:30am or later than 9:30pm, throw an error\r\n    if (\r\n      resDate.getHours() < 10 ||\r\n      (resDate.getHours() === 10 && resDate.getMinutes() < 30)\r\n    ) {\r\n      setVisibility3(true);\r\n      switched = true;\r\n    }\r\n\r\n    if (\r\n      resDate.getHours() > 21 ||\r\n      (resDate.getHours() === 21 && resDate.getMinutes() > 30)\r\n    ) {\r\n      setVisibility3(true);\r\n      switched = true;\r\n    }\r\n  };\r\n\r\n  //Create the handleCancel function to cancel and return to the homepage1\r\n  const handleCancel = (event) => {\r\n    event.preventDefault();\r\n    history.push(\"/dashboard\");\r\n  };\r\n\r\n  //Return the form with inputs to create a new reservation\r\n  return (\r\n    <main>\r\n      <h1>Add a New Reservation</h1>\r\n      <ResForm\r\n        firstName={firstName}\r\n        handleFirstNameChange={handleFirstNameChange}\r\n        lastName={lastName}\r\n        handleLastNameChange={handleLastNameChange}\r\n        mobileNumber={mobileNumber}\r\n        handleMobileNumberChange={handleMobileNumberChange}\r\n        reservationDate={reservationDate}\r\n        handleReservationDateChange={handleReservationDateChange}\r\n        reservationTime={reservationTime}\r\n        handleReservationTimeChange={handleReservationTimeChange}\r\n        people={people}\r\n        handlePeopleChange={handlePeopleChange}\r\n        handleSubmit={handleSubmit}\r\n        handleCancel={handleCancel}\r\n      />\r\n      <PastDateError visibility={visibility} />\r\n      <TuesdayError visibility2={visibility2} />\r\n      <TimeError visibility3={visibility3} />\r\n      <ErrorCaught visibility3={visibilityError} msg={errMessage} />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default NewReservation;\r\n","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\EditReservation.js",["256"],"import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { readReservation, updateReservation } from \"../utils/api\";\r\nimport ResForm from \"./ResForm\";\r\nimport ErrorCaught from \"./ErrorCaught\";\r\nimport ErrorAlert from \"../layout/ErrorAlert\";\r\n\r\n/**\r\n * Defines the dashboard page.\r\n * @param date\r\n *  the date for which the user wants to view reservations.\r\n * @returns {JSX.Element}\r\n */\r\nfunction EditReservation({ date }) {\r\n  //Create state variables for each field of reservation and add event listeners\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const handleFirstNameChange = (event) => setFirstName(event.target.value);\r\n\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const handleLastNameChange = (event) => setLastName(event.target.value);\r\n\r\n  const [mobileNumber, setMobileNumber] = useState(\"\");\r\n  const handleMobileNumberChange = (event) =>\r\n    setMobileNumber(event.target.value);\r\n\r\n  const [reservationDate, setReservationDate] = useState(\"\");\r\n  const handleReservationDateChange = (event) =>\r\n    setReservationDate(event.target.value);\r\n\r\n  const [reservationTime, setReservationTime] = useState(\"\");\r\n  const handleReservationTimeChange = (event) =>\r\n    setReservationTime(event.target.value);\r\n\r\n  const [people, setPeople] = useState(\"\");\r\n  const handlePeopleChange = (event) => setPeople(Number(event.target.value));\r\n\r\n  //State vars for error message\r\n  const [visibility3, setVisibility3] = useState(null);\r\n  const [errMessage, setErrMessage] = useState(\"\");\r\n\r\n  //Get ReservationId from url\r\n  const { reservationId } = useParams();\r\n\r\n  //Create instance of useHistory hook\r\n  const history = useHistory();\r\n\r\n  //Make an API Call to get the reservation based on the reservation_id\r\n  useEffect(() => {\r\n    async function getReservation(reservationId) {\r\n      const response = await readReservation(reservationId);\r\n\r\n      let dateString = response.reservation_date.substring(0, 10);\r\n\r\n      setFirstName(response.first_name);\r\n      setLastName(response.last_name);\r\n      setMobileNumber(response.mobile_number);\r\n      setReservationDate(dateString);\r\n      setReservationTime(response.reservation_time);\r\n      setPeople(response.people);\r\n    }\r\n    getReservation(reservationId);\r\n  }, [reservationId]);\r\n\r\n  //Create the handleSubmit function to update the deck\r\n  //This function creates a reservation based on the user input and then uses changeReservation() api call\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    setVisibility3(null);\r\n\r\n    let reservation = {\r\n      data: {},\r\n    };\r\n\r\n    reservation.data.reservation_id = reservationId;\r\n    reservation.data.first_name = firstName;\r\n    reservation.data.last_name = lastName;\r\n    reservation.data.mobile_number = mobileNumber;\r\n    reservation.data.reservation_date = reservationDate;\r\n    reservation.data.reservation_time = reservationTime;\r\n    reservation.data.people = people;\r\n\r\n    //Make api call to update reservation\r\n    async function changeReservation(reservation) {\r\n      try {\r\n        const response = await updateReservation(reservation);\r\n        console.log(response);\r\n      } catch (err) {\r\n        console.log(\"Error making updateReservation API call: \", err);\r\n        setErrMessage(err);\r\n        setVisibility3(true);\r\n      }\r\n    }\r\n    await changeReservation(reservation);\r\n\r\n    //Reset fields\r\n    setFirstName(\"\");\r\n    setLastName(\"\");\r\n    setMobileNumber(\"\");\r\n    setReservationDate(\"\");\r\n    setReservationTime(\"\");\r\n    setPeople(\"\");\r\n\r\n    //Go back to dashboard page\r\n    history.push(`/dashboard?date=${reservationDate}`);\r\n  }\r\n\r\n  //Create the handleCancel function to return the user to the previous page\r\n  const handleCancel = (event) => {\r\n    history.push(`/dashboard?date=${reservationDate}`);\r\n  };\r\n\r\n  //Return the form to enter the reservation details\r\n  return (\r\n    <main>\r\n      <h1>Edit Reservation</h1>\r\n      <ResForm\r\n        firstName={firstName}\r\n        handleFirstNameChange={handleFirstNameChange}\r\n        lastName={lastName}\r\n        handleLastNameChange={handleLastNameChange}\r\n        mobileNumber={mobileNumber}\r\n        handleMobileNumberChange={handleMobileNumberChange}\r\n        reservationDate={reservationDate}\r\n        handleReservationDateChange={handleReservationDateChange}\r\n        reservationTime={reservationTime}\r\n        handleReservationTimeChange={handleReservationTimeChange}\r\n        people={people}\r\n        handlePeopleChange={handlePeopleChange}\r\n        handleSubmit={handleSubmit}\r\n        handleCancel={handleCancel}\r\n      />\r\n      <ErrorCaught visibility3={visibility3} msg={errMessage} />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default EditReservation;\r\n","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\Search.js",["257","258","259"],"import React, { useEffect, useState } from \"react\";\r\nimport SearchResults from \"./SearchResults\";\r\nimport { listReservations } from \"../utils/api\";\r\nimport ErrorAlert from \"../layout/ErrorAlert\";\r\n\r\n/**\r\n * Defines the dashboard page.\r\n * @param date\r\n *  the date for which the user wants to view reservations.\r\n * @returns {JSX.Element}\r\n */\r\nfunction Search({ date }) {\r\n  //Create the phone nubmer state variable and add event listeners\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const handlePhoneNumberChange = (event) => setPhoneNumber(event.target.value);\r\n  const [visibilityStatus, setVisibilityStatus] = useState(null);\r\n  const [reservations, setReservations] = useState([]);\r\n  const [reservationsError, setReservationsError] = useState(null);\r\n\r\n  //UseEffect is used to get the reservations\r\n  useEffect(loadDashboard, [phoneNumber]);\r\n\r\n  //Load all of the reservations filtered by phone number\r\n  function loadDashboard() {\r\n    const abortController = new AbortController();\r\n    setReservationsError(null);\r\n    const mobile_number = phoneNumber;\r\n\r\n    listReservations({ mobile_number }, abortController.signal)\r\n      .then(setReservations)\r\n      .catch(setReservationsError);\r\n    return () => abortController.abort();\r\n  }\r\n\r\n  //The handleSubmit function merely shows the search results\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    loadDashboard();\r\n    setVisibilityStatus(true);\r\n  };\r\n\r\n  //Create the handleCancel function to cancel and return to the homepage1\r\n  const handleCancel = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  //Return the form to enter the phone number and show the results\r\n  return (\r\n    <main>\r\n      <h1>Find Reservations</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"mobile_number\">Enter a Customer Phone Number</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"mobile_number\"\r\n            className=\"form-control\"\r\n            id=\"mobile_number\"\r\n            onChange={handlePhoneNumberChange}\r\n            value={phoneNumber}\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Find\r\n        </button>\r\n      </form>\r\n      <div>\r\n        <SearchResults\r\n          visibility={visibilityStatus}\r\n          phoneNumber={phoneNumber}\r\n          reservations={reservations}\r\n        />\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\SearchResults.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\dashboard\\SeatButton.js",["260","261"],"//The Seat Button is used to seat a reservation\r\n//The button will appear next to a reservation on the Dashboard\r\n//The two props are visibility and reservationId\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction SeatButton({ visibility, reservationId }) {\r\n  if (visibility !== null) {\r\n    return (\r\n      <td>\r\n        <Link to={`/reservations/${reservationId}/seat`}>\r\n          <button type=\"button\" class=\"btn btn-outline-primary\">\r\n            Seat\r\n          </button>\r\n        </Link>{\" \"}\r\n      </td>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default SeatButton;\r\n","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\dashboard\\FinishButton.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\dashboard\\CancelButton.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\PastDateError.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\TuesdayError.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\OccupiedError.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\CapacityError.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\TimeError.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\ResForm.js",["262","263"],"//The Seat Button is used to seat a reservation\r\n//The button will appear next to a reservation on the Dashboard\r\n//The two props are visibility and reservationId\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nfunction ResForm({\r\n  firstName,\r\n  handleFirstNameChange,\r\n  lastName,\r\n  handleLastNameChange,\r\n  mobileNumber,\r\n  handleMobileNumberChange,\r\n  reservationDate,\r\n  handleReservationDateChange,\r\n  reservationTime,\r\n  handleReservationTimeChange,\r\n  people,\r\n  handlePeopleChange,\r\n  handleSubmit,\r\n  handleCancel,\r\n}) {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"first_name\">First Name</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"first_name\"\r\n          className=\"form-control\"\r\n          id=\"first_name\"\r\n          aria-describedby=\"emailHelp\"\r\n          onChange={handleFirstNameChange}\r\n          value={firstName}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"last_name\">Last Name</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"last_name\"\r\n          className=\"form-control\"\r\n          id=\"last_name\"\r\n          onChange={handleLastNameChange}\r\n          value={lastName}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"mobile_number\">Mobile Number</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"mobile_number\"\r\n          className=\"form-control\"\r\n          id=\"mobile_number\"\r\n          onChange={handleMobileNumberChange}\r\n          value={mobileNumber}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"reservation_date\">Date of Reservation</label>\r\n        <input\r\n          type=\"date\"\r\n          name=\"reservation_date\"\r\n          className=\"form-control\"\r\n          id=\"reservation_date\"\r\n          onChange={handleReservationDateChange}\r\n          value={reservationDate}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"reservation_time\">Time of Reservation</label>\r\n        <input\r\n          type=\"time\"\r\n          name=\"reservation_time\"\r\n          className=\"form-control\"\r\n          id=\"reservation_time\"\r\n          onChange={handleReservationTimeChange}\r\n          value={reservationTime}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"people\">People</label>\r\n        <input\r\n          type=\"number\"\r\n          name=\"people\"\r\n          className=\"form-control\"\r\n          id=\"people\"\r\n          onChange={handlePeopleChange}\r\n          value={people}\r\n        />\r\n      </div>\r\n      <button type=\"submit\" className=\"btn btn-primary\">\r\n        Submit\r\n      </button>\r\n      <button type=\"cancel\" className=\"btn btn-primary\" onClick={handleCancel}>\r\n        Cancel\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ResForm;\r\n","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\ErrorCaught.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\index.js",[],["264","265"],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\App.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\layout\\Layout.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\layout\\Menu.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\layout\\Routes.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\layout\\NotFound.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\dashboard\\Dashboard.js",["266","267","268","269","270","271","272"],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\reservations\\EditParticipant.js",["273","274","275","276"],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\reservations\\Reservations.js",["277","278"],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\reservations\\NewParticipant.js",["279","280","281","282","283","284"],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\reservations\\AddTable.js",["285"],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\reservations\\Seat.js",["286","287","288","289"],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\reservations\\Search.js",["290","291","292"],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\utils\\date-time.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\dashboard\\FinishButton.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\dashboard\\CancelButton.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\reservations\\ErrorCaught.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\utils\\api.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\dashboard\\SeatButton.js",["293","294"],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\reservations\\ResForm.js",["295","296"],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\layout\\ErrorAlert.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\reservations\\PastDateError.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\reservations\\CapacityError.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\reservations\\TuesdayError.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\reservations\\SearchResults.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\reservations\\OccupiedError.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\reservations\\TimeError.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\SJ\\TRY_DB\\front-end\\src\\utils\\format-reservation-date.js",[],{"ruleId":"297","replacedBy":"298"},{"ruleId":"299","replacedBy":"300"},{"ruleId":"301","severity":1,"message":"302","line":17,"column":8,"nodeType":"303","messageId":"304","endLine":17,"endColumn":18},{"ruleId":"301","severity":1,"message":"305","line":28,"column":10,"nodeType":"303","messageId":"304","endLine":28,"endColumn":27},{"ruleId":"301","severity":1,"message":"306","line":30,"column":10,"nodeType":"303","messageId":"304","endLine":30,"endColumn":21},{"ruleId":"301","severity":1,"message":"307","line":34,"column":9,"nodeType":"303","messageId":"304","endLine":34,"endColumn":16},{"ruleId":"308","severity":1,"message":"309","line":38,"column":3,"nodeType":"310","messageId":"311","endLine":42,"endColumn":4},{"ruleId":"301","severity":1,"message":"312","line":122,"column":15,"nodeType":"303","messageId":"304","endLine":122,"endColumn":23},{"ruleId":"301","severity":1,"message":"312","line":166,"column":15,"nodeType":"303","messageId":"304","endLine":166,"endColumn":23},{"ruleId":"301","severity":1,"message":"302","line":3,"column":8,"nodeType":"303","messageId":"304","endLine":3,"endColumn":18},{"ruleId":"301","severity":1,"message":"305","line":13,"column":10,"nodeType":"303","messageId":"304","endLine":13,"endColumn":27},{"ruleId":"301","severity":1,"message":"302","line":11,"column":8,"nodeType":"303","messageId":"304","endLine":11,"endColumn":18},{"ruleId":"301","severity":1,"message":"306","line":25,"column":10,"nodeType":"303","messageId":"304","endLine":25,"endColumn":21},{"ruleId":"313","severity":1,"message":"314","line":63,"column":25,"nodeType":"315","endLine":63,"endColumn":31,"suggestions":"316"},{"ruleId":"301","severity":1,"message":"312","line":118,"column":15,"nodeType":"303","messageId":"304","endLine":118,"endColumn":23},{"ruleId":"301","severity":1,"message":"302","line":5,"column":8,"nodeType":"303","messageId":"304","endLine":5,"endColumn":18},{"ruleId":"301","severity":1,"message":"302","line":4,"column":8,"nodeType":"303","messageId":"304","endLine":4,"endColumn":18},{"ruleId":"301","severity":1,"message":"312","line":80,"column":17,"nodeType":"303","messageId":"304","endLine":80,"endColumn":25},{"ruleId":"301","severity":1,"message":"302","line":6,"column":8,"nodeType":"303","messageId":"304","endLine":6,"endColumn":18},{"ruleId":"301","severity":1,"message":"302","line":4,"column":8,"nodeType":"303","messageId":"304","endLine":4,"endColumn":18},{"ruleId":"301","severity":1,"message":"305","line":18,"column":10,"nodeType":"303","messageId":"304","endLine":18,"endColumn":27},{"ruleId":"301","severity":1,"message":"317","line":43,"column":9,"nodeType":"303","messageId":"304","endLine":43,"endColumn":21},{"ruleId":"301","severity":1,"message":"318","line":5,"column":17,"nodeType":"303","messageId":"304","endLine":5,"endColumn":26},{"ruleId":"301","severity":1,"message":"319","line":5,"column":28,"nodeType":"303","messageId":"304","endLine":5,"endColumn":36},{"ruleId":"301","severity":1,"message":"318","line":5,"column":17,"nodeType":"303","messageId":"304","endLine":5,"endColumn":26},{"ruleId":"301","severity":1,"message":"319","line":5,"column":28,"nodeType":"303","messageId":"304","endLine":5,"endColumn":36},{"ruleId":"297","replacedBy":"320"},{"ruleId":"299","replacedBy":"321"},{"ruleId":"301","severity":1,"message":"302","line":17,"column":8,"nodeType":"303","messageId":"304","endLine":17,"endColumn":18},{"ruleId":"301","severity":1,"message":"305","line":28,"column":10,"nodeType":"303","messageId":"304","endLine":28,"endColumn":27},{"ruleId":"301","severity":1,"message":"306","line":30,"column":10,"nodeType":"303","messageId":"304","endLine":30,"endColumn":21},{"ruleId":"301","severity":1,"message":"307","line":34,"column":9,"nodeType":"303","messageId":"304","endLine":34,"endColumn":16},{"ruleId":"308","severity":1,"message":"309","line":38,"column":3,"nodeType":"310","messageId":"311","endLine":42,"endColumn":4},{"ruleId":"301","severity":1,"message":"312","line":122,"column":15,"nodeType":"303","messageId":"304","endLine":122,"endColumn":23},{"ruleId":"301","severity":1,"message":"312","line":166,"column":15,"nodeType":"303","messageId":"304","endLine":166,"endColumn":23},{"ruleId":"301","severity":1,"message":"322","line":4,"column":3,"nodeType":"303","messageId":"304","endLine":4,"endColumn":18},{"ruleId":"301","severity":1,"message":"323","line":5,"column":3,"nodeType":"303","messageId":"304","endLine":5,"endColumn":20},{"ruleId":"301","severity":1,"message":"302","line":11,"column":8,"nodeType":"303","messageId":"304","endLine":11,"endColumn":18},{"ruleId":"301","severity":1,"message":"324","line":33,"column":23,"nodeType":"303","messageId":"304","endLine":33,"endColumn":37},{"ruleId":"301","severity":1,"message":"302","line":3,"column":8,"nodeType":"303","messageId":"304","endLine":3,"endColumn":18},{"ruleId":"301","severity":1,"message":"305","line":13,"column":10,"nodeType":"303","messageId":"304","endLine":13,"endColumn":27},{"ruleId":"301","severity":1,"message":"325","line":3,"column":10,"nodeType":"303","messageId":"304","endLine":3,"endColumn":27},{"ruleId":"301","severity":1,"message":"302","line":4,"column":8,"nodeType":"303","messageId":"304","endLine":4,"endColumn":18},{"ruleId":"301","severity":1,"message":"326","line":6,"column":8,"nodeType":"303","messageId":"304","endLine":6,"endColumn":21},{"ruleId":"301","severity":1,"message":"327","line":7,"column":8,"nodeType":"303","messageId":"304","endLine":7,"endColumn":20},{"ruleId":"301","severity":1,"message":"328","line":8,"column":8,"nodeType":"303","messageId":"304","endLine":8,"endColumn":17},{"ruleId":"301","severity":1,"message":"312","line":62,"column":17,"nodeType":"303","messageId":"304","endLine":62,"endColumn":25},{"ruleId":"301","severity":1,"message":"302","line":5,"column":8,"nodeType":"303","messageId":"304","endLine":5,"endColumn":18},{"ruleId":"301","severity":1,"message":"302","line":11,"column":8,"nodeType":"303","messageId":"304","endLine":11,"endColumn":18},{"ruleId":"301","severity":1,"message":"306","line":25,"column":10,"nodeType":"303","messageId":"304","endLine":25,"endColumn":21},{"ruleId":"313","severity":1,"message":"314","line":63,"column":25,"nodeType":"315","endLine":63,"endColumn":31,"suggestions":"329"},{"ruleId":"301","severity":1,"message":"312","line":118,"column":15,"nodeType":"303","messageId":"304","endLine":118,"endColumn":23},{"ruleId":"301","severity":1,"message":"302","line":4,"column":8,"nodeType":"303","messageId":"304","endLine":4,"endColumn":18},{"ruleId":"301","severity":1,"message":"305","line":18,"column":10,"nodeType":"303","messageId":"304","endLine":18,"endColumn":27},{"ruleId":"301","severity":1,"message":"317","line":43,"column":9,"nodeType":"303","messageId":"304","endLine":43,"endColumn":21},{"ruleId":"301","severity":1,"message":"318","line":5,"column":17,"nodeType":"303","messageId":"304","endLine":5,"endColumn":26},{"ruleId":"301","severity":1,"message":"319","line":5,"column":28,"nodeType":"303","messageId":"304","endLine":5,"endColumn":36},{"ruleId":"301","severity":1,"message":"318","line":5,"column":17,"nodeType":"303","messageId":"304","endLine":5,"endColumn":26},{"ruleId":"301","severity":1,"message":"319","line":5,"column":28,"nodeType":"303","messageId":"304","endLine":5,"endColumn":36},"no-native-reassign",["330"],"no-negated-in-lhs",["331"],"no-unused-vars","'ErrorAlert' is defined but never used.","Identifier","unusedVar","'reservationsError' is assigned a value but never used.","'tablesError' is assigned a value but never used.","'history' is assigned a value but never used.","no-extend-native","Date prototype is read only, properties should not be added.","AssignmentExpression","unexpected","'response' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadPeople'. Either include it or remove the dependency array.","ArrayExpression",["332"],"'handleCancel' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.",["330"],["331"],"'readReservation' is defined but never used.","'updateReservation' is defined but never used.","'setVisibility3' is assigned a value but never used.","'createReservation' is defined but never used.","'PastDateError' is defined but never used.","'TuesdayError' is defined but never used.","'TimeError' is defined but never used.",["333"],"no-global-assign","no-unsafe-negation",{"desc":"334","fix":"335"},{"desc":"334","fix":"336"},"Update the dependencies array to be: [date, loadPeople]",{"range":"337","text":"338"},{"range":"339","text":"338"},[2073,2079],"[date, loadPeople]",[2073,2079]]